/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BC.java
 *
 * Created on 2011/3/21, 下午 05:31:42
 */

package BusinessCard;

//import javax.swing.JMenu;

import java.awt.Dialog;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JMenu;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;


/**
 *
 * @author HOME2
 */
public class BC extends javax.swing.JFrame {
//JMenu Save,Load,Insert,Delete,Modify;
    /** Creates new form BC */
    public BC() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainTable = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        MainMenu = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Save = new javax.swing.JMenuItem();
        Load = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        Insert = new javax.swing.JMenuItem();
        Delete = new javax.swing.JMenuItem();
        Modify = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Business Cards");

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Name", "e-mail", "url"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.setGridColor(new java.awt.Color(0, 0, 0));
        Table.setRowSelectionAllowed(false);
        MainTable.setViewportView(Table);

        File.setText("File");

        Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        Save.setText("SAVE");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        File.add(Save);

        Load.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        Load.setText("LOAD");
        Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadActionPerformed(evt);
            }
        });
        File.add(Load);

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        Exit.setText("EXIT");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        MainMenu.add(File);

        Edit.setText("Edit");

        Insert.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        Insert.setText("INSERT");
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });
        Edit.add(Insert);

        Delete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        Delete.setText("DELETE");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        Edit.add(Delete);

        Modify.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        Modify.setText("MODIFY");
        Modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyActionPerformed(evt);
            }
        });
        Edit.add(Modify);

        MainMenu.add(Edit);

        setJMenuBar(MainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTable, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTable, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // TODO add your handling code here:
        if(choose.showSaveDialog(this) != JFileChooser.APPROVE_OPTION)return;
        int i,j,n;
        try{
            File file = new File(choose.getSelectedFile() + ".bc");
            PrintWriter output = new PrintWriter(file);
            for(n = 0;(n < Table.getRowCount()) && (Table.getValueAt(n, 0) != null);n++){
                output.println("" + (String)Table.getValueAt(n, 0) + " " + (String)Table.getValueAt(n,1) + " " + (String)Table.getValueAt(n,2));
            }
            output.close();
    	}
    	catch(IOException ex){
    		System.out.println("Save Error!");
    	}
    }//GEN-LAST:event_SaveActionPerformed

    private void LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadActionPerformed
        // TODO add your handling code here:
        if(choose.showOpenDialog(this) != JFileChooser.APPROVE_OPTION)return;
    	int i = 0,j;
        int now_rows = Table.getRowCount();
    	String st= "";
    	try {
            File file = choose.getSelectedFile();
            while(file.getName().charAt(i++) != '.');
            while(i < file.getName().length())
                st = st + file.getName().charAt(i++);
            if(!st.equals("bc"))throw new IOException();
            Scanner input = new Scanner(file);
            for(j = 0;input.hasNext();j++){
                if(j >= now_rows){
                    ((DefaultTableModel)Table.getModel()).addRow(new Object[]{null});
                    now_rows++;
                }
                Table.setValueAt(input.next(), j, 0);
                Table.setValueAt(input.next(), j, 1);
                Table.setValueAt(input.next(), j, 2);
            }
        } catch (IOException e){
            System.out.println("Load Error!");
        }
    }//GEN-LAST:event_LoadActionPerformed

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
        // TODO add your handling code here:
        InsertDialog id = new InsertDialog(this,true);
        id.NullText();
        id.setVisible(true);
        id.invalidate();
        int i;
        String n,e,u;
        n = id.name;
        e = id.mail;
        u = id.url;
        if(n == null || n.length() == 0)return;
        if(!Check(n,e,u))return;
        ((DefaultTableModel)Table.getModel()).addRow(new Object[]{null});
        for(i = 0;Table.getValueAt(i, 0) != null;i++);
        Table.setValueAt(n, i, 0);
        Table.setValueAt(e, i, 1);
        Table.setValueAt(u, i, 2);
        Table.invalidate();
    }//GEN-LAST:event_InsertActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int i = Table.getSelectedRow();
        if(i < 0)return;
        int j = i + 1;
        while(true){
            if(Table.getRowCount() <= j){
                Table.setValueAt(null, i, 0);
                Table.setValueAt(null, i, 1);
                Table.setValueAt(null, i, 2);
                break;
            }else{
                Table.setValueAt(Table.getValueAt(j, 0), i, 0);
                Table.setValueAt(Table.getValueAt(j, 1), i, 1);
                Table.setValueAt(Table.getValueAt(j, 2), i, 2);
            }
            if(Table.getValueAt(j, 0) == null)break;
            i++;
            j++;
        }
        ((DefaultTableModel)Table.getModel()).removeRow(i);
    }//GEN-LAST:event_DeleteActionPerformed

    private void ModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyActionPerformed
        // TODO add your handling code here:
        int i = Table.getSelectedRow();
        if(i < 0)return;
        InsertDialog id = new InsertDialog(this,true);
        id.ChangeText((String)Table.getValueAt(i, 0), (String)Table.getValueAt(i, 1), (String)Table.getValueAt(i, 2));
        id.setVisible(true);
        id.invalidate();
        String n,e,u;
        n = id.name;
        e = id.mail;
        u = id.url;
        if(n == null || n.length() == 0)return;
        if(!Check(n,e,u))return;
        Table.setValueAt(n, i, 0);
        Table.setValueAt(e, i, 1);
        Table.setValueAt(u, i, 2);
        Table.invalidate();
    }//GEN-LAST:event_ModifyActionPerformed

    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BC().setVisible(true);
            }
        });
    }


    private JFileChooser choose = new JFileChooser(new File("."));
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Delete;
    private javax.swing.JMenu Edit;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu File;
    private javax.swing.JMenuItem Insert;
    private javax.swing.JMenuItem Load;
    private javax.swing.JMenuBar MainMenu;
    private javax.swing.JScrollPane MainTable;
    private javax.swing.JMenuItem Modify;
    private javax.swing.JMenuItem Save;
    private javax.swing.JTable Table;
    // End of variables declaration//GEN-END:variables

    private boolean Check(String n,String e,String u){
        if(n == null || n.length() == 0)return false;
        if(!e.matches("[a-z0-9_]{3,16}@[a-z]{3,8}\\.((edu)|(gov)|(com)|(mil)|(net)|(org))\\.?[a-z]*"))return false;
        if(!u.matches("http://[a-z0-9]{2,5}\\.[a-z0-9]{2,10}\\.((edu)|(gov)|(com)|(mil)|(net)|(org))\\.*[a-zA-Z0-9/-~\\?]*"))return false;
        return true;
    }
}
